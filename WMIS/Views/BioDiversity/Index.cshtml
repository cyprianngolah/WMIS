@{
	ViewBag.Title = "Biodiversity";
}

@section Styles {
	@Html.Raw(Styles.Render("~/bundles/content/datatables"))
	@Html.Raw(Styles.Render("~/bundles/select2css"))
}

@section Scripts {
    @Html.Raw(Scripts.Render("~/bundles/datatables"))
    @Html.Raw(Scripts.Render("~/bundles/select2"))
    @Html.Raw(Scripts.Render("~/bundles/knockout"))
    @Html.Raw(Scripts.Render("~/bundles/wmis"))
    @Html.Raw(Scripts.Render("~/bundles/synonym"))

    <script type="text/javascript">
        var bioDiversityTable;
        $(function() {
            initDataTable();
            initSelect2($("#group"), "/api/taxonomy/group/", "Group");
            initSelect2($("#order"), "/api/taxonomy/order/", "Order");
            initSelect2($("#family"), "/api/taxonomy/family/", "Family");

            $("#searchButton").click(function() {
                bioDiversityTable.fnFilter();
            });
        });

        function initSelect2($select, ajaxUrl, placeHolder) {
            $.ajax({
                url: ajaxUrl,
                dataType: "json",
                type: "GET",
                xhrFields: {
                    withCredentials: true
                }
            }).done(function(data) {
                appendDataToSelect(data, $select);
            });

            $select.select2({
                placeholder: placeHolder
            });
        }

        function appendDataToSelect(data, $select) {
            $select.empty();
            $select.append("<option value=''>All</option>");
            $.each(data, function(index, value) {
                $select.append($("<option></option>").attr("value", value.key).text(value.name));
            });
        }

        function initDataTable() {
            var parameters;
            bioDiversityTable = $('#biodiversity').dataTable({
            	"iDisplayLength": 25,
				"scrollX": true,
                "bJQueryUI": true,
                "bProcessing": true,
                "serverSide": true,
                "ajaxSource": "/api/biodiversity/",
                "pagingType": "bootstrap",
                "dom": '<"top">rt<"bottom"ip><"clear">',
                "columns": [
                    { "data": "name" },
                    { "data": "name" },
                    { "data": "name" },
                    { "data": "commonName" },
                    { "data": "name" },
                    { "data": "subSpeciesName" },
                    { "data": "name" },
                    { "data": "name" },
                    { "data": "lastUpdated" }
                ],
                "fnServerData": function(source, data, callback, settings) {
                    var sortDirection = null;
                    var sortedColumnName = null;
                    if (settings.aaSorting.length > 0) {
                        sortDirection = settings.aaSorting[0][1];
                        var sortedColumnIndex = settings.aaSorting[0][0];
                        sortedColumnName = settings.aoColumns[sortedColumnIndex].mData;
                    }

                    // Parameters that are passed during the request to the webservice
                    // We're doing some transforms here because I don't want to have to write
                    // DataTable specific logic into the Web Api
                    parameters = {
                        // Data Tables parameter transforms
                        startRow: settings.oAjaxData.iDisplayStart,
                        rowCount: settings.oAjaxData.iDisplayLength,
                        sortBy: sortedColumnName,
                        sortDirection: sortDirection,
                        i: settings.oAjaxData.sEcho,

                        // Custom search data
                        group: $("#group").val(),
                        order: $("#order").val(),
                        family: $("#family").val(),
                        keywords: $("#keywords").val()
                    };

                    $.getJSON(source, parameters, function(json) {
                        // On Success of the call, transform some of the data and call the specified callback
                        // Transforms are to transform returned data into DataTable expected format so paging
                        // will work properly.
                        json.draw = parameters.i;
                        json.recordsTotal = json.resultCount;
                        json.recordsFiltered = json.resultCount;
                        callback(json);
                    });
                },
                "fnDrawCallback": function() {
                    bioDiversityTable.$('tr.info').removeClass('info');
                    $("#editButton").addClass('disabled');

                    $("#biodiversity tbody tr").click(function() {
                        // Highlight selected row
                        if ($(this).hasClass('info')) {
                            $(this).removeClass('info');
                            $("#editButton").addClass('disabled');
                        } else {
                            bioDiversityTable.$('tr.info').removeClass('info');
                            $(this).addClass('info');
                            if (bioDiversityTable.$('tr.info').length) {
                                // Get Data
                                var position = bioDiversityTable.fnGetPosition(this);
                                var data = bioDiversityTable.fnGetData(position);

                                if (data.key) {
                                    $("#editButton").removeClass('disabled');
                                    $("#editButton").prop("href", "/BioDiversity/Edit/" + data.key);
                                }
                            }
                        }
                    });
                }
            });
        }
    </script>

    <script>
        $(function () {
            Wmis.SynonymModule.Initialize({
                modalSelector: "#myModal",
                saveButtonSelector: "#saveSynonymsButton",
                synonymUrl: "/api/taxonomy/synonym",
                synonymSaveManyUrl: "/api/taxonomy/synonym/savemany",
            });

            $("#viewSynonymsButton").click(function () {
                Wmis.SynonymModule.Show([
                    { taxonomyId: 1, name: "Mammal", groupName: "Kingdom" },
                    { taxonomyId: 2, name: "Artiodactyla", groupName: "Order" },
                    { taxonomyId: 3, name: "Bovidae", groupName: "Family" }
                ]);
            });
        });
    </script>

    <script type="text/html" id="synonymTemplate">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group" style="padding-bottom: 5px; padding-top: 6px; margin-bottom: 0;">
                    <span data-bind="text: groupName"></span>:
                    <span data-bind="text: name"></span>
                </div>
            </div>
            <div class="col-md-9">
                <div class="form-group" style="padding-bottom: 5px; margin-bottom: 0;">
                    <input class="form-control" data-bind="value: synonymsValue, select2: { tags: synonyms, tokenSeparators: [',', ' '], formatNoMatches: function() { return ''; } }" />
                </div>
            </div>
        </div>
    </script>
}

    <button id="viewSynonymsButton" type="button" class="btn btn-default">View Synonyms</button>

    <div id="myModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Synonyms</h4>
                </div>
                <div class="modal-body">
                    <div data-bind="template: { name: 'synonymTemplate', foreach: taxonomy }"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="saveSynonymsButton" type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
		<div class="col-md-12 text-right">
			<a href="/BioDiversity/New" class="btn btn-default" style="margin-bottom: 10px;">New</a>
			<a href="/BioDiversity/Edit" id="editButton" class="btn btn-default disabled" style="margin-bottom: 10px;">Edit</a>
		</div>
	</div>

	<div class="well" style="margin-bottom: 0px;">
		<div class="row">
			<div class="col-md-12">
				<form class="form-horizontal center" role="form">
					<div class="col-md-3">
						<div class="form-group" style="padding-bottom: 5px; padding-top: 5px; margin-bottom: 0;">
							<label class="sr-only" for="group">Group</label>
							<select class="form-control" id="group" name="group">
								<option value="">Group</option>
							</select>
						</div>
					</div>

					<div class="col-md-3">
						<div class="form-group" style="padding-bottom: 5px; padding-top: 5px; margin-bottom: 0;">
							<label class="sr-only" for="order">Order</label>
							<select class="form-control" id="order" name="order">
								<option value="">Order</option>
							</select>
						</div>
					</div>

					<div class="col-md-3">
						<div class="form-group" style="padding-bottom: 5px; padding-top: 5px; margin-bottom: 0;">
							<label class="sr-only" for="family">Family</label>
							<select class="form-control" id="family" name="family">
								<option value="">Family</option>
							</select>
						</div>
					</div>

					<label class="sr-only" for="keywords">Keywords</label>
					<div class="col-md-3">
						<div class="form-group" style="padding-bottom: 5px; padding-top: 5px; margin-bottom: 0;">
							<div class="input-group">
								<input type="text" id="keywords" class="form-control" placeholder="Keywords" />
								<span class="input-group-btn">
									<button class="btn btn-default" type="button" id="searchButton">Search</button>
								</span>
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>


	<div class="row">
		<div class="col-md-12">
			<table id="biodiversity" class="table">
				<thead>
					<tr>
						<th>Group</th>
						<th>Order</th>
						<th>Family</th>
						<th>Common Name</th>
						<th>Species</th>
						<th>Sub Species</th>
						<th>Eco Type</th>
						<th>Population</th>
						<th>Last Updated</th>
					</tr>
				</thead>
			</table>
		</div>
	</div>